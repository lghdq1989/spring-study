

<foreach collection="crmEntList" item="item" open="(" separator="," close=")">
								#{item}
</foreach>



Mybatis ResultMap Collection 复合主键
 <resultMap type="XX" id="XXMap">
        <id property="id" column="colid"/>

        <id property="name" column="colname"/>

        <collection property="list" javaType="ArrayList" column="{id = colid,name=colname}" select="getSubXXX"/>
 </resultMap>

前为别名后为主查询getXXX语句中字段

<select id="getXXX" parameterType="HashMap" resultMap="XXX">
        SELECT colid,colname FROM table1

 </select>

 <select id="getSubXXX" parameterType="HashMap" resultType="XXX">
        SELECT * FROM table2 WHERE id = #{id} AND name = #{name}
  </select>

javatype 等于属性  ofType 等于list
   <collection property="idcpServiceBasicInfoLanguageList" ofType="com.midea.dcp.product.entity.IdcpServiceBasicInfoLanguage">
      <!-- 定义这个集合中元素的封装规则 -->
      <id column="basid" property="serviceBasicInfoId"/>
      <id column="language" property="language"/>
      <result column="service_desc" property="serviceDesc"/>
      <result column="service_name" property="serviceName"/>
    </collection>


     <choose>

              <when test=" type == 'x1' '">

                  where   条件1;

             </when >

             <when test=" type == 'x2' '">

                  where  条件2;

             </when >

            <otherwise>

                   条件3;   // 可以为空

           </otherwise>



       </choose>

批量删除
       <delete id="batchDeleteByCondition">
               delete from test where
               <foreach collection="list" item="item" separator=" or " index="index">
                   (name = #{item.name} and area_code = #{item.areaCode} and type = #{item.type})
               </foreach>
           </delete>
验证插入

 insert into idcp_service_config_apply18n
        ( service_area, service_lang,
        apply_id, service_content,remark,is_Usable,is_Delete)
        SELECT   #{serviceArea,jdbcType=VARCHAR}, #{serviceLang,jdbcType=VARCHAR},
      #{applyId,jdbcType=BIGINT}, #{serviceContent,jdbcType=LONGVARCHAR},#{remark,jdbcType=VARCHAR},#{isUsable,jdbcType=INTEGER},#{isDelete,jdbcType=INTEGER}
        from DUAL WHERE NOT EXISTS
        (SELECT service_lang FROM idcp_service_config_apply18n
        WHERE
            service_lang =#{serviceLang,jdbcType=VARCHAR}
        and apply_id =#{applyId,jdbcType=BIGINT}
        and service_area=#{serviceArea,jdbcType=VARCHAR}
        )